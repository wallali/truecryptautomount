#summary A real life scenario of how this script is used.

=Protecting personal data on a laptop from theft=

Having lost my laptop in a house theft I realized that BIOS passwords protect my laptop from being used or sold easily however they do not really protect my data because the thief can very easily remove the hard drive from the laptop and plug it into another PC via USB and browse files on the disk. While I could insure my laptop against theft I could not insure data on the laptop. This is when I decided to use [http://www.truecrypt.org TrueCrypt] to encrypt the data on the disk so that only I could gain access to it even if the disk was removed from the laptop.

The simple and most secure way of doing this is encrypting the entire [http://www.truecrypt.org/docs/?s=system-encryption system partition] and associated data partitions with the same password and enabling the [http://www.truecrypt.org/docs/?s=program-menu favourite partitions] option in [http://www.truecrypt.org TrueCrypt]. 
However I did not want to encrypt the system partition because:
  # My sensitive data was entirely on another 'data only' partition.
  # Encrypting the system partition and associated program files would slow down windows and increase load on the CPU in general.
  # It would require [http://www.truecrypt.org TrueCrypt] boot manager to be installed which _may_ cause issues with multi-boot system like mine with the boot manager getting replaced by another.
  # All partitions that I wanted mounted would need to have the same password.

I could encrypt just the data partition using [http://www.truecrypt.org TrueCrypt]. However, I had my moved windows user profile entirely onto the data partition. This meant if the data partition was encrypted and not immediately available on startup, I would not be able to log on. In order to make the disk available, I would have to log on, and mount the disk using [http://www.truecrypt.org TrueCrypt]. However I could not log on until the disk was available. A chicken and egg problem.

The manual solution was to have another dummy/guest account whose profile was not on the encrypted partition, log into it, manually mount the encrypted disk with [http://www.truecrypt.org TrueCrypt] then log out then log in again with my real account. This was much too complicated. I wanted something that would just work without requiring additional accounts and without manual intervention.

I found that [http://www.truecrypt.org TrueCrypt] also supports [http://www.truecrypt.org/docs/?s=keyfiles key files] and instead of a password a [http://www.truecrypt.org/docs/?s=keyfiles key file] (or bunch of key files) can be used as a key for encrypting/decrypting a disk. This meant that I could encrypt the data disk using a [http://www.truecrypt.org/docs/?s=keyfiles key file] then place the key file on a USB stick. The USB stick would function as a key to decrypting the drive without requiring me to enter a password. There were still several issues with this approach. 
  * The drive would still require mounting somehow via [http://www.truecrypt.org TrueCrypt] upon windows startup. 
  * It could happen that I forgot to insert the USB key when the computer booted initially and only realized later at the logon screen that the key was required. I wanted to be able to insert the key at this time and log on directly into my account without requiring a dummy account. 
  * The USB stick could get assigned different drive letters based on what peripherals were already connected to the USB port of my laptop.

The only way to solve these problems were by use of a script that would run before anyone logged in and searched for the key file on all possible removable drives. If it found the file it would go ahead and mount the encrypted disk. It not it would wait for the key file to become available. This is what this script does. It also provides additional options to disable a users account if the disk having the users profile is not mounted and re-enable the account when the disk becomes available.

Now I start my laptop and wait for the login screen. Then I insert my USB key and this clever little script mounts the data partition and enables my account. I then remove the USB key and log in as usual. Perfect!